Request...
/Users/adam/sandbox/earthly/ast/listener.go
---
package ast

import (
	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
	"github.com/earthly/earthly/ast/parser"
	"github.com/earthly/earthly/ast/spec"
)

// This file defines the structure and methods for parsing Earthly AST using ANTLR.
// It includes the listener implementation that constructs the AST from parsed tokens.

// block holds the parsed block of statements and directives.
type block struct {
	block         spec.Block
	statement     *spec.Statement
	withStatement *spec.WithStatement
	ifStatement   *spec.IfStatement
	elseIf        *spec.ElseIf
	tryStatement  *spec.TryStatement
	forStatement  *spec.ForStatement
	waitStatement *spec.WaitStatement
}

// listener is an implementation of EarthParserListener that constructs the AST.
type listener struct {
	*parser.BaseEarthParserListener

	tokStream *antlr.CommonTokenStream
	ef        *spec.Earthfile
	target    *spec.Target
	function  *spec.Function
	blocks    []*block
	command   *spec.Command

	stmtWords []string
	execMode  bool

	ctx             context.Context
	filePath        string
	enableSourceMap bool

	err error
}

// newListener creates a new listener instance for parsing.
func newListener(ctx context.Context, stream *antlr.CommonTokenStream, filePath string, enableSourceMap bool) *listener { ... }

// Err returns any parsing errors encountered by the listener.
func (l *listener) Err() error { ... }

// Earthfile returns the parsed Earthfile.
func (l *listener) Earthfile() spec.Earthfile { ... }

// EnterEarthFile is called when parsing enters the EarthFile rule.
func (l *listener) EnterEarthFile(c *parser.EarthFileContext) { ... }

// ExitEarthFile is called when parsing exits the EarthFile rule.
func (l *listener) ExitEarthFile(c *parser.EarthFileContext) { ... }

// EnterTarget is called when parsing enters the Target rule.
func (l *listener) EnterTarget(c *parser.TargetContext) { ... }

// EnterTargetHeader is called when parsing enters the TargetHeader rule.
func (l *listener) EnterTargetHeader(c *parser.TargetHeaderContext) { ... }

// ExitTarget is called when parsing exits the Target rule.
func (l *listener) ExitTarget(c *parser.TargetContext) { ... }

// EnterUserCommand is called when parsing enters the UserCommand rule.
func (l *listener) EnterUserCommand(c *parser.UserCommandContext) { ... }

// EnterUserCommandHeader is called when parsing enters the UserCommandHeader rule.
func (l *listener) EnterUserCommandHeader(c *parser.UserCommandHeaderContext) { ... }

// ExitUserCommand is called when parsing exits the UserCommand rule.
func (l *listener) ExitUserCommand(c *parser.UserCommandContext) { ... }

// EnterFunction is called when parsing enters the Function rule.
func (l *listener) EnterFunction(c *parser.FunctionContext) { ... }

// EnterFunctionHeader is called when parsing enters the FunctionHeader rule.
func (l *listener) EnterFunctionHeader(c *parser.FunctionHeaderContext) { ... }

// ExitFunction is called when parsing exits the Function rule.
func (l *listener) ExitFunction(c *parser.FunctionContext) { ... }

// EnterStmt is called when parsing enters the Stmt rule.
func (l *listener) EnterStmt(c *parser.StmtContext) { ... }

// ExitStmt is called when parsing exits the Stmt rule.
func (l *listener) ExitStmt(c *parser.StmtContext) { ... }

// EnterCommandStmt is called when parsing enters the CommandStmt rule.
func (l *listener) EnterCommandStmt(c *parser.CommandStmtContext) { ... }

// ExitCommandStmt is called when parsing exits the CommandStmt rule.
func (l *listener) ExitCommandStmt(c *parser.CommandStmtContext) { ... }

// EnterWithStmt is called when parsing enters the WithStmt rule.
func (l *listener) EnterWithStmt(c *parser.WithStmtContext) { ... }

// ExitWithStmt is called when parsing exits the WithStmt rule.
func (l *listener) ExitWithStmt(c *parser.WithStmtContext) { ... }

// EnterWithBlock is called when parsing enters the WithBlock rule.
func (l *listener) EnterWithBlock(c *parser.WithBlockContext) { ... }

// ExitWithBlock is called when parsing exits the WithBlock rule.
func (l *listener) ExitWithBlock(c *parser.WithBlockContext) { ... }

// EnterWithCommand is called when parsing enters the WithCommand rule.
func (l *listener) EnterWithCommand(c *parser.WithCommandContext) { ... }

// ExitWithCommand is called when parsing exits the WithCommand rule.
func (l *listener) ExitWithCommand(c *parser.WithCommandContext) { ... }

// EnterIfStmt is called when parsing enters the IfStmt rule.
func (l *listener) EnterIfStmt(c *parser.IfStmtContext) { ... }

// ExitIfStmt is called when parsing exits the IfStmt rule.
func (l *listener) ExitIfStmt(c *parser.IfStmtContext) { ... }

// EnterIfExpr is called when parsing enters the IfExpr rule.
func (l *listener) EnterIfExpr(c *parser.IfExprContext) { ... }

// ExitIfExpr is called when parsing exits the IfExpr rule.
func (l *listener) ExitIfExpr(c *parser.IfExprContext) { ... }

// EnterIfBlock is called when parsing enters the IfBlock rule.
func (l *listener) EnterIfBlock(c *parser.IfBlockContext) { ... }

// ExitIfBlock is called when parsing exits the IfBlock rule.
func (l *listener) ExitIfBlock(c *parser.IfBlockContext) { ... }

// EnterElseIfClause is called when parsing enters the ElseIfClause rule.
func (l *listener) EnterElseIfClause(c *parser.ElseIfClauseContext) { ... }

// ExitElseIfClause is called when parsing exits the ElseIfClause rule.
func (l *listener) ExitElseIfClause(c *parser.ElseIfClauseContext) { ... }

// EnterElseIfExpr is called when parsing enters the ElseIfExpr rule.
func (l *listener) EnterElseIfExpr(c *parser.ElseIfExprContext) { ... }

// ExitElseIfExpr is called when parsing exits the ElseIfExpr rule.
func (l *listener) ExitElseIfExpr(c *parser.ElseIfExprContext) { ... }

// EnterElseIfBlock is called when parsing enters the ElseIfBlock rule.
func (l *listener) EnterElseIfBlock(c *parser.ElseIfBlockContext) { ... }

// ExitElseIfBlock is called when parsing exits the ElseIfBlock rule.
func (l *listener) ExitElseIfBlock(c *parser.ElseIfBlockContext) { ... }

// EnterElseBlock is called when parsing enters the ElseBlock rule.
func (l *listener) EnterElseBlock(c *parser.ElseBlockContext) { ... }

// ExitElseBlock is called when parsing exits the ElseBlock rule.
func (l *listener) ExitElseBlock(c *parser.ElseBlockContext) { ... }

// EnterTryStmt is called when parsing enters the TryStmt rule.
func (l *listener) EnterTryStmt(c *parser.TryStmtContext) { ... }

// ExitTryStmt is called when parsing exits the TryStmt rule.
func (l *listener) ExitTryStmt(c *parser.TryStmtContext) { ... }

// EnterTryBlock is called when parsing enters the TryBlock rule.
func (l *listener) EnterTryBlock(c *parser.TryBlockContext) { ... }

// ExitTryBlock is called when parsing exits the TryBlock rule.
func (l *listener) ExitTryBlock(c *parser.TryBlockContext) { ... }

// EnterCatchBlock is called when parsing enters the CatchBlock rule.
func (l *listener) EnterCatchBlock(c *parser.CatchBlockContext) { ... }

// ExitCatchBlock is called when parsing exits the CatchBlock rule.
func (l *listener) ExitCatchBlock(c *parser.CatchBlockContext) { ... }

// EnterFinallyBlock is called when parsing enters the FinallyBlock rule.
func (l *listener) EnterFinallyBlock(c *parser.FinallyBlockContext) { ... }

// ExitFinallyBlock is called when parsing exits the FinallyBlock rule.
func (l *listener) ExitFinallyBlock(c *parser.FinallyBlockContext) { ... }

// EnterForStmt is called when parsing enters the ForStmt rule.
func (l *listener) EnterForStmt(c *parser.ForStmtContext) { ... }

// ExitForStmt is called when parsing exits the ForStmt rule.
func (l *listener) ExitForStmt(c *parser.ForStmtContext) { ... }

// EnterForExpr is called when parsing enters the ForExpr rule.
func (l *listener) EnterForExpr(c *parser.ForExprContext) { ... }

// ExitForExpr is called when parsing exits the ForExpr rule.
func (l *listener) ExitForExpr(c *parser.ForExprContext) { ... }

// EnterForBlock is called when parsing enters the ForBlock rule.
func (l *listener) EnterForBlock(c *parser.ForBlockContext) { ... }

// ExitForBlock is called when parsing exits the ForBlock rule.
func (l *listener) ExitForBlock(c *parser.ForBlockContext) { ... }

// EnterWaitStmt is called when parsing enters the WaitStmt rule.
func (l *listener) EnterWaitStmt(c *parser.WaitStmtContext) { ... }

// ExitWaitStmt is called when parsing exits the WaitStmt rule.
func (l *listener) ExitWaitStmt(c *parser.WaitStmtContext) { ... }

// EnterWaitExpr is called when parsing enters the WaitExpr rule.
func (l *listener) EnterWaitExpr(c *parser.WaitExprContext) { ... }

// ExitWaitExpr is called when parsing exits the WaitExpr rule.
func (l *listener) ExitWaitExpr(c *parser.WaitExprContext) { ... }

// EnterWaitBlock is called when parsing enters the WaitBlock rule.
func (l *listener) EnterWaitBlock(c *parser.WaitBlockContext) { ... }

// ExitWaitBlock is called when parsing exits the WaitBlock rule.
func (l *listener) ExitWaitBlock(c *parser.WaitBlockContext) { ... }

// EnterEnvArgKey is called when parsing enters the EnvArgKey rule.
func (l *listener) EnterEnvArgKey(c *parser.EnvArgKeyContext) { ... }

// EnterEnvArgValue is called when parsing enters the EnvArgValue rule.
func (l *listener) EnterEnvArgValue(c *parser.EnvArgValueContext) { ... }

// EnterLabelKey is called when parsing enters the LabelKey rule.
func (l *listener) EnterLabelKey(c *parser.LabelKeyContext) { ... }

// EnterLabelValue is called when parsing enters the LabelValue rule.
func (l *listener) EnterLabelValue(c *parser.LabelValueContext) { ... }

// ExitStmtWordsMaybeJSON is called when parsing exits the StmtWordsMaybeJSON rule.
func (l *listener) ExitStmtWordsMaybeJSON(c *parser.StmtWordsMaybeJSONContext) { ... }

// EnterStmtWord is called when parsing enters the StmtWord rule.
func (l *listener) EnterStmtWord(c *parser.StmtWordContext) { ... }

---
